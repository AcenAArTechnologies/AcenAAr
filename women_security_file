#include <TinyGPS++.h>
#include <SoftwareSerial.h>
#include <AltSoftSerial.h>

#define rxPin 3
#define txPin 2

const int button1 = 5;
const int alaram = 4;

int button_State; //Button state
SoftwareSerial sim800L(rxPin,txPin); 
//GPS Module RX pin to Arduino 9
//GPS Module TX pin to Arduino 8
AltSoftSerial neogps;

TinyGPSPlus gps;

unsigned long previousMillis = 0;
long interval = 60000;


void setup()
{
  //Begin serial communication with Arduino and Arduino IDE (Serial Monitor)
  Serial.begin(115200);
  
  //Begin serial communication with Arduino and SIM800L
  sim800L.begin(9600);

  //Begin serial communication with Arduino and SIM800L
  neogps.begin(9600);

  Serial.println("Initializing...");
  //delay(10000);

  //Once the handshake test is successful, it will back to OK
  sendATcommand("AT", "OK", 2000);
  sendATcommand("AT+CMGF=1", "OK", 2000);
  //sim800L.print("AT+CMGR=40\r");
  pinMode(button1, INPUT_PULLUP); 
  pinMode(alaram, OUTPUT);
  digitalWrite(alaram, LOW);
}

void loop()
{
  digitalWrite(alaram, LOW);
  while(sim800L.available()){
    Serial.println(sim800L.readString());
  }
  while(Serial.available())  {
    sim800L.println(Serial.readString());
  }
  button_State = digitalRead(button1);   //We are constantly reading the button State
  if (button_State == 1) {            //And if it's pressed
    Serial.println("Button pressed");   //Shows this message on the serial monitor
    delay(200);                         //Small delay to avoid detecting the button press many times  
    SendSMS();                          //And this function is called
  }
  delay(500);
}

int SendSMS()
{
    //Can take up to 60 seconds
    boolean newData = false;
    for (unsigned long start = millis(); millis() - start < 2000;){
      while (neogps.available()){
        if (gps.encode(neogps.read())){
          newData = true;
          break;
        }
      }
    }
  
    //If newData is true
    if(true){
      newData = false;
      
      String latitude, longitude;
      float altitude;
      unsigned long date, time, speed, satellites;
  
      latitude = String(gps.location.lat(), 6); // Latitude in degrees (double)
      longitude = String(gps.location.lng(), 6); // Longitude in degrees (double)
      altitude = gps.altitude.meters(); // Altitude in meters (double)
      //date = gps.date.value(); // Raw date in DDMMYY format (u32)
      //time = gps.time.value(); // Raw time in HHMMSSCC format (u32)
      //speed = gps.speed.kmph();
      //latitude = 15.8281;
      //longitude = 78.0373;
      Serial.print("Latitude= "); 
      Serial.print(latitude);
      Serial.print(" Longitude= "); 
      Serial.println(longitude);
  
      //if (latitude == 0) {return 0;}
      
      String url, temp;
      url = "http://maps.google.com/?q=";
      url += latitude;
      url += ",";
      url += longitude;
      Serial.println(url);    
      delay(300);
      Serial.println("Sending SMS...");               //Show this message on serial monitor
      sendATcommand("AT+CMGF=1", "please save me", 1000);                   //Set the module to SMS mode
      delay(100);
      sendATcommand("AT+CMGS=\"+919912980760\"", "please save me", 1000);  //Your phone number don't forget to include your country code, example +212123456789"
      delay(500);
      sim800L.print(url);       //This is the text to send to the phone number, don't make it too long or you have to modify the SoftwareSerial buffer
      delay(500);
      sim800L.print((char)26);// (required according to the datasheet)
      delay(500);
      sim800L.println();
      Serial.println("Text Sent.");
      delay(500);  
      digitalWrite(alaram, HIGH);
      //delay(8000);  
  }
  return 1;    
}

int8_t sendATcommand(char* ATcommand, char* expected_answer, unsigned int timeout){

    uint8_t x=0,  answer=0;
    char response[100];
    unsigned long previous;

    //Initialice the string
    memset(response, '\0', 100);
    delay(100);
    
    //Clean the input buffer
    while( sim800L.available() > 0) sim800L.read();
    
    if (ATcommand[0] != '\0'){
      //Send the AT command 
      sim800L.println(ATcommand);
    }

    x = 0;
    previous = millis();

    //this loop waits for the answer with time out
    do{
        //if there are data in the UART input buffer, reads it and checks for the asnwer
        if(sim800L.available() != 0){
            response[x] = sim800L.read();
            //Serial.print(response[x]);
            x++;
            // check if the desired answer (OK) is in the response of the module
            if(strstr(response, expected_answer) != NULL){
                answer = 1;
            }
        }
    }while((answer == 0) && ((millis() - previous) < timeout));

  Serial.println(response);
  return answer;
}
